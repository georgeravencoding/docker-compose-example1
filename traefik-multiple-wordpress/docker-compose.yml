---

services:
  dockerproxy:
    image: tecnativa/docker-socket-proxy:edge
    restart: always
    container_name: dockerproxy
    networks:
      - dockerproxynet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LOG_LEVEL: info
      # 0 to revoke access / 1 to grant access.
      ## Granted by Default
      EVENTS: 1
      PING: 1
      VERSION: 1
      ## Revoked by Default
      # Security critical
      AUTH: 0
      SECRETS: 0
      # Not always needed
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1 # Traefik, portainer, etc.
      DISTRIBUTION: 0
      EXEC: 0
      IMAGES: 1 # Portainer
      INFO: 1 # Portainer
      NETWORKS: 1 # Portainer
      NODES: 0
      PLUGINS: 0
      SERVICES: 1 # Portainer
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1 # Portainer
      VOLUMES: 1 # Portainer
      TZ: "Europe/Paris"

  traefik:
    image: traefik:${TRAEFIKVERSION}
    restart: unless-stopped
    container_name: traefik
    networks:
      - dockerproxynet
    ports:
      - target : 80
        published : 80
        protocol: tcp
        mode : host
      - target : 443
        published : 443
        protocol: tcp
        mode : host
    volumes:
      - ./conf/acme.json:/acme.json
      - ./conf/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./conf/traefikdynamic:/etc/traefik/dynamic:ro
      - ./logs/traefik.log:/etc/traefik/applog.log
      - /etc/localtime:/etc/localtime:ro
      #- /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: "Europe/Paris"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    mem_limit: 256m
    mem_reservation: 128m
    depends_on:
      - dockerproxy

  sqlwp1:
    image: mariadb:${MARIADBVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/custom-mysql.cnf:/etc/mysql/conf.d/custom-mysql.cnf
      - /etc/localtime:/etc/localtime:ro
      - datasqlwp1:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQLROOT1}
      MYSQL_USER: ${MYSQLUSER1}
      MYSQL_PASSWORD: ${MYSQLPASSWORD1}
      MYSQL_DATABASE: ${MYSQLDB1}
      TZ: "Europe/Paris"
 
  nginxwp1:
    image: nginx:${NGINXVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/nginx-wp1:/etc/nginx/
      - /etc/localtime:/etc/localtime:ro
      - datanginxlogs1:/var/log/nginx/
      - datawp1:/var/www/html
    links:
      - wp1

  wp1:
    image: wordpress:${WPVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - /etc/localtime:/etc/localtime:ro
      - datawp1:/var/www/html
    depends_on:
      - sqlwp1
      - redis
    environment:
      WORDPRESS_DB_HOST: sqlwp1
      WORDPRESS_DB_USER: ${MYSQLUSER1}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD1}
      WORDPRESS_DB_NAME: ${MYSQLDB1}
      WORDPRESS_TABLE_PREFIX: ${MYSQLTABLEPREFIX1}
      TZ: "Europe/Paris"

  sqlwp2:
    image: mariadb:${MARIADBVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/custom-mysql.cnf:/etc/mysql/conf.d/custom-mysql.cnf
      - /etc/localtime:/etc/localtime:ro
      - datasqlwp2:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQLROOT2}
      MYSQL_USER: ${MYSQLUSER2}
      MYSQL_PASSWORD: ${MYSQLPASSWORD2}
      MYSQL_DATABASE: ${MYSQLDB2}
      TZ: "Europe/Paris"
 
  nginxwp2:
    image: nginx:${NGINXVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/nginx-wp2:/etc/nginx/
      - /etc/localtime:/etc/localtime:ro
      - datanginxlogs2:/var/log/nginx/
      - datawp2:/var/www/html
    links:
      - wp2

  wp2:
    image: wordpress:${WPVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - /etc/localtime:/etc/localtime:ro
      - datawp2:/var/www/html
    depends_on:
      - sqlwp2
      - redis
    environment:
      WORDPRESS_DB_HOST: sqlwp2
      WORDPRESS_DB_USER: ${MYSQLUSER2}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD2}
      WORDPRESS_DB_NAME: ${MYSQLDB2}
      WORDPRESS_TABLE_PREFIX: ${MYSQLTABLEPREFIX2}
      TZ: "Europe/Paris"

  sqlwp3:
    image: mariadb:${MARIADBVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/custom-mysql.cnf:/etc/mysql/conf.d/custom-mysql.cnf
      - /etc/localtime:/etc/localtime:ro
      - datasqlwp3:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQLROOT3
      MYSQL_USER: ${MYSQLUSER3}
      MYSQL_PASSWORD: ${MYSQLPASSWORD3}
      MYSQL_DATABASE: ${MYSQLDB3}
      TZ: "Europe/Paris"
 
  nginxwp3:
    image: nginx:${NGINXVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/nginx-wp3:/etc/nginx/
      - /etc/localtime:/etc/localtime:ro
      - datanginxlogs3:/var/log/nginx/
      - datawp3:/var/www/html
    links:
      - wp3

  wp3:
    image: wordpress:${WPVERSION}
    restart: unless-stopped
    volumes:
      - ./conf/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - /etc/localtime:/etc/localtime:ro
      - datawp3:/var/www/html
    depends_on:
      - sqlwp3
      - redis
    environment:
      WORDPRESS_DB_HOST: sqlwp3
      WORDPRESS_DB_USER: ${MYSQLUSER3}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD3}
      WORDPRESS_DB_NAME: ${MYSQLDB3}
      WORDPRESS_TABLE_PREFIX: ${MYSQLTABLEPREFIX3}
      TZ: "Europe/Paris"

  redis:
    image: redis:${REDISVERSION}
    restart: unless-stopped
    command: redis-server --maxmemory 1024mb --maxmemory-policy allkeys-lru --requirepass changemeWithALongPassword --appendonly yes --bind redis
    environement:
      TZ: "Europe/Paris"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - dataredis:/data

volumes:
  datanginxlogs1:
  datanginxlogs2:
  datanginxlogs3:
  dataredis:
  datasqlwp1:
  datasqlwp2:
  datasqlwp3:
  datawp1:
  datawp2:
  datawp3:

networks:
  dockerproxynet:
    name: dockerproxynet
    ipam:
      config:
        - subnet: 172.16.10.0/24
