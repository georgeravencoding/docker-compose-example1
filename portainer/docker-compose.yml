---

services:
  dockerproxy:
    image: tecnativa/docker-socket-proxy:edge
    restart: always
    container_name: dockerproxy
    networks:
      - dockerproxynet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      LOG_LEVEL: info
      # 0 to revoke access / 1 to grant access.
      ## Granted by Default
      EVENTS: 1
      PING: 1
      VERSION: 1
      ## Revoked by Default
      # Security critical
      AUTH: 0
      SECRETS: 0
      # Not always needed
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1 # Traefik, portainer, etc.
      DISTRIBUTION: 0
      EXEC: 0
      IMAGES: 1 # Portainer
      INFO: 1 # Portainer
      NETWORKS: 1 # Portainer
      NODES: 0
      PLUGINS: 0
      SERVICES: 1 # Portainer
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1 # Portainer
      VOLUMES: 1 # Portainer
      TZ: "Europe/Paris"

  portainer:
    image: portainer/${VERSION}
    restart: unless-stopped
    container_name: portainer
    networks:
      - dockerproxynet
    command: ["-H", "tcp://dockerproxy:2375"]
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider --no-check-certificate http://localhost:9000 || exit 1"
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - dataportainer:/data
    environment:
      TZ: "Europe/Paris"
    depends_on:
      - dockerproxy

volumes:
  dataportainer:

networks:
  dockerproxynet:
    name: dockerproxynet
    ipam:
      config:
        - subnet: 172.16.10.0/24
